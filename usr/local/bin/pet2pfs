#!/bin/sh
#Convert .pet to .pfs (for PuppyRus), by Zay, GPL v3.
#Version 0.11
#Modify 28.12.2013

for arg in "$@"
do
  case "${arg}" in 
    "-no-progress" | "--no-progress") noprogress="-no-progress";;
    *) infile="${arg}";;
  esac
done
if [ ! "${infile}" ]; then
  echo "Usage: $(basename "$0") FILE" >&2; exit 1
fi
if [ -f "${infile}" ]; then
  instfile="$(realpath "${infile}")"
else
  echo "File \"${infile}\" not found!" >&2; exit 1
fi

path="$(pwd)"
tmpdir="/tmp/.pfs/petconvert/$(basename "${instfile}")"

if [ -d "${tmpdir}" ]; then
  rmdir "${tmpdir}" 2>/dev/null
  if [ -d "${tmpdir}" ]; then
    echo "Progress is already running!" >&2; exit 1    
  fi
fi

mkdir -p "${tmpdir}"
cp -af "${instfile}" "${tmpdir}"
status=$?
instpet="${tmpdir}/$(basename "${instfile}")"
basepack="$(basename "${instpet}" .pet)"
  
if [ ${status} -eq 0 ]; then 
  tar xzf "${instpet}" -C "${tmpdir}" >/dev/null 2>&1
  status=$?
  if [ ${status} -ne 0 ]; then    
    truncate `stat --format=%s "${instpet}" | expr $(cat) - 32` "${instpet}" >/dev/null 2>&1
    status=$?
    if [ ${status} -eq 0 ]; then
      tar xzf "${instpet}" -C "${tmpdir}" >/dev/null 2>&1
      status=$?
    fi
  fi
fi
rm -f "${instpet}" >/dev/null 2>&1

if [ ${status} -eq 0 ]; then
  if [ -d "${tmpdir}/${basepack}" ]; then
    pfsname="${basepack}_pet"
    mkdir -p "${tmpdir}/${basepack}/etc/packages/mount/${pfsname}"
    cd "$(find "${tmpdir}" -mindepth 1 -maxdepth 1 -type d | while read catalog
    do
      echo "${catalog}"; break
    done)"
    status=$?
  else
    status=1
  fi
fi

if [ ${status} -eq 0 ]; then
  [ "$(pwd)" != "/" ] && find "./etc/packages/mount/" -mindepth 1 -maxdepth 1 -type d ! -name "${pfsname}" -exec rm -rf "{}" \;
  mkdir -p "./etc/packages/mount/${pfsname}"
  echo "name=\"${pfsname}\"" >"./etc/packages/mount/${pfsname}/pfs.specs"
  find . -mindepth 1 -maxdepth 1 -type f -name "*pet*specs*" | while read specs
  do
    mv "${specs}" "./etc/packages/mount/${pfsname}/"
  done
  allfiles="$(find . ! -type d | cut -f2- -d'.' | grep -v -F '/etc/packages/' | sort -f)"
  if [ "${allfiles}" = "" ]; then
    echo "Files not found!"; status=1
  fi
fi
if [ ${status} -eq 0 ]; then
  echo "${allfiles}" >"./etc/packages/mount/${pfsname}/pfs.files"
  dirsempty="$(find . -type d -empty | cut -f2- -d'.' | sort -f)" 
  dirsfile="./etc/packages/mount/${pfsname}/pfs.dirs.empty"
  [ "${dirsempty}" = "" ] && [ -f "${dirsfile}" ] && rm -f "${dirsfile}"
  [ "${dirsempty}" != "" ] && echo "${dirsempty}" >"${dirsfile}"
fi

cd "${path}"
sync

if [ ${status} -eq 0 ]; then
  uname -m | grep -q -e "86" -e "32" -e "64" && bcjcomp="x86" || bcjcomp="x86,arm"
  mksquashfs "${tmpdir}/${basepack}" "./${basepack}.pfs" -comp xz -b 512K -Xbcj ${bcjcomp} -noappend ${noprogress}
  status=$?
fi

rm -rf "/tmp/.pfs/petconvert/$(basename "${instfile}")"

[ ${status} -gt 0 ] && echo "Convert error!" >&2

exit ${status}
